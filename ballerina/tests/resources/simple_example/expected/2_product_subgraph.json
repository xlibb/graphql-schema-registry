{
    "data": {
        "publishSubgraph": {
            "schema": "schema\n  @link(url: \"https://specs.apollo.dev/link/v1.0\")\n  @link(url: \"https://specs.apollo.dev/join/v0.3\", for: EXECUTION)\n{\n  query: Query\n}\n\ndirective @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE\n\ndirective @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ndirective @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR\n\ndirective @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION\n\ndirective @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA\n\nscalar join__FieldSet\n\nenum join__Graph {\n  PRODUCTS @join__graph(name: \"products\", url: \"http://localhost:8080\")\n}\n\nscalar link__Import\n\nenum link__Purpose {\n  \"\"\"\n  `SECURITY` features provide metadata necessary to securely resolve fields.\n  \"\"\"\n  SECURITY\n\n  \"\"\"\n  `EXECUTION` features provide metadata necessary for operation execution.\n  \"\"\"\n  EXECUTION\n}\n\n\"\"\"Represents a product in the system\"\"\"\ntype Product\n  @join__type(graph: PRODUCTS, key: \"id\")\n{\n  \"\"\"The unique ID of the product\"\"\"\n  id: ID!\n\n  \"\"\"The name of the product\"\"\"\n  name: String!\n\n  \"\"\"The description of the product\"\"\"\n  description: String!\n\n  \"\"\"The price of the product\"\"\"\n  price: Float!\n}\n\ntype Query\n  @join__type(graph: PRODUCTS)\n{\n  \"\"\"Returns the list of products\"\"\"\n  products: [Product!]!\n\n  \"\"\"\n  Returns the product for the given id. If the product does not exist, returns null\n  \"\"\"\n  product(\n    \"\"\"ID of the product to be retrieved\"\"\"\n    id: ID!\n  ): Product\n}",
            "apiSchema": "\"\"\"Represents a product in the system\"\"\"\ntype Product {\n  \"\"\"The unique ID of the product\"\"\"\n  id: ID!\n\n  \"\"\"The name of the product\"\"\"\n  name: String!\n\n  \"\"\"The description of the product\"\"\"\n  description: String!\n\n  \"\"\"The price of the product\"\"\"\n  price: Float!\n}\n\ntype Query {\n  \"\"\"Returns the list of products\"\"\"\n  products: [Product!]!\n\n  \"\"\"\n  Returns the product for the given id. If the product does not exist, returns null\n  \"\"\"\n  product(\n    \"\"\"ID of the product to be retrieved\"\"\"\n    id: ID!\n  ): Product\n}",
            "version": "0.1.0",
            "hints": [],
            "diffs": [
                {
                    "severity": "SAFE",
                    "action": "ADDED",
                    "subject": "TYPE",
                    "location": [],
                    "value": "Product",
                    "fromValue": null,
                    "toValue": null
                },
                {
                    "severity": "SAFE",
                    "action": "ADDED",
                    "subject": "FIELD",
                    "location": [
                        "Query"
                    ],
                    "value": "products",
                    "fromValue": null,
                    "toValue": null
                },
                {
                    "severity": "SAFE",
                    "action": "ADDED",
                    "subject": "FIELD",
                    "location": [
                        "Query"
                    ],
                    "value": "product",
                    "fromValue": null,
                    "toValue": null
                }
            ]
        }
    }
}