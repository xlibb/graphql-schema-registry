{
    "data": {
        "dryRun": {
            "schema": "schema\n  @link(url: \"https://specs.apollo.dev/link/v1.0\")\n  @link(url: \"https://specs.apollo.dev/join/v0.3\", for: EXECUTION)\n{\n  query: Query\n}\n\ndirective @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE\n\ndirective @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ndirective @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR\n\ndirective @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION\n\ndirective @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA\n\nscalar join__FieldSet\n\nenum join__Graph {\n  PRODUCTS @join__graph(name: \"products\", url: \"http://localhost:8080\")\n  USERS @join__graph(name: \"users\", url: \"http://localhost:8081\")\n}\n\nscalar link__Import\n\nenum link__Purpose {\n  \"\"\"\n  `SECURITY` features provide metadata necessary to securely resolve fields.\n  \"\"\"\n  SECURITY\n\n  \"\"\"\n  `EXECUTION` features provide metadata necessary for operation execution.\n  \"\"\"\n  EXECUTION\n}\n\n\"\"\"Represents a product in the system\"\"\"\ntype Product\n  @join__type(graph: PRODUCTS, key: \"id\")\n{\n  \"\"\"The unique ID of the product\"\"\"\n  id: ID!\n\n  \"\"\"The name of the product\"\"\"\n  name: String!\n\n  \"\"\"The description of the product\"\"\"\n  description: String!\n\n  \"\"\"The price of the product\"\"\"\n  price: Float!\n}\n\ntype Query\n  @join__type(graph: PRODUCTS)\n  @join__type(graph: USERS)\n{\n  \"\"\"Returns the list of products\"\"\"\n  products: [Product!]! @join__field(graph: PRODUCTS)\n\n  \"\"\"\n  Returns the product for the given id. If the product does not exist, returns null\n  \"\"\"\n  product(\n    \"\"\"ID of the product to be retrieved\"\"\"\n    id: ID!\n  ): Product @join__field(graph: PRODUCTS)\n\n  \"\"\"Returns the list of users\"\"\"\n  users: [User!]! @join__field(graph: USERS)\n}\n\n\"\"\"Represents a user in the system\"\"\"\ntype User\n  @join__type(graph: USERS, key: \"id\")\n{\n  \"\"\"The unique identifier for the user\"\"\"\n  id: ID!\n\n  \"\"\"The name of the user\"\"\"\n  name: String!\n\n  \"\"\"The email of the user\"\"\"\n  email: String!\n}",
            "apiSchema": "\"\"\"Represents a product in the system\"\"\"\ntype Product {\n  \"\"\"The unique ID of the product\"\"\"\n  id: ID!\n\n  \"\"\"The name of the product\"\"\"\n  name: String!\n\n  \"\"\"The description of the product\"\"\"\n  description: String!\n\n  \"\"\"The price of the product\"\"\"\n  price: Float!\n}\n\ntype Query {\n  \"\"\"Returns the list of products\"\"\"\n  products: [Product!]!\n\n  \"\"\"\n  Returns the product for the given id. If the product does not exist, returns null\n  \"\"\"\n  product(\n    \"\"\"ID of the product to be retrieved\"\"\"\n    id: ID!\n  ): Product\n\n  \"\"\"Returns the list of users\"\"\"\n  users: [User!]!\n}\n\n\"\"\"Represents a user in the system\"\"\"\ntype User {\n  \"\"\"The unique identifier for the user\"\"\"\n  id: ID!\n\n  \"\"\"The name of the user\"\"\"\n  name: String!\n\n  \"\"\"The email of the user\"\"\"\n  email: String!\n}",
            "version": "0.2.0",
            "subgraphs": [
                {
                    "name": "products",
                    "schema": "extend schema @link(url: \"https://specs.apollo.dev/federation/v2.0\", import: [\"@key\"]) \n\ntype Query {\n  \"Returns the list of products\"\n  products: [Product!]!\n  \"Returns the product for the given id. If the product does not exist, returns null\"\n  product(\n    \"ID of the product to be retrieved\"\n    id: ID!\n  ): Product\n}\n\n\"Represents a product in the system\"\ntype Product @key(fields: \"id\") {\n  \"The unique ID of the product\"\n  id: ID!\n  \"The name of the product\"\n  name: String!\n  \"The description of the product\"\n  description: String!\n  \"The price of the product\"\n  price: Float!\n}"
                },
                {
                    "name": "users",
                    "schema": "extend schema @link(url: \"https://specs.apollo.dev/federation/v2.0\", import: [\"@key\"]) \n\ntype Query {\n  \"Returns the list of users\"\n  users: [User!]!\n}\n\n\"Represents a user in the system\"\ntype User @key(fields: \"id\") {\n  \"The unique identifier for the user\"\n  id: ID!\n  \"The name of the user\"\n  name: String!\n  \"The email of the user\"\n  email: String!\n}"
                }
            ],
            "hints": [],
            "diffs": [
                {
                    "severity": "DANGEROUS",
                    "action": "CHANGED",
                    "subject": "FIELD_TYPE",
                    "location": [
                        "User",
                        "email"
                    ],
                    "value": null,
                    "fromValue": "String",
                    "toValue": "String!"
                }
            ]
        }
    }
}