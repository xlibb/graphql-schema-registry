{
    "data": {
        "publishSubgraph": {
            "schema": "schema\n  @link(url: \"https://specs.apollo.dev/link/v1.0\")\n  @link(url: \"https://specs.apollo.dev/join/v0.3\", for: EXECUTION)\n{\n  query: Query\n  mutation: Mutation\n}\n\ndirective @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE\n\ndirective @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ndirective @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR\n\ndirective @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION\n\ndirective @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA\n\nscalar join__FieldSet\n\nenum join__Graph {\n  PRODUCTS @join__graph(name: \"products\", url: \"http://localhost:8080\")\n  REVIEWS @join__graph(name: \"reviews\", url: \"http://localhost:8082\")\n  USERS @join__graph(name: \"users\", url: \"http://localhost:8081\")\n}\n\nscalar link__Import\n\nenum link__Purpose {\n  \"\"\"\n  `SECURITY` features provide metadata necessary to securely resolve fields.\n  \"\"\"\n  SECURITY\n\n  \"\"\"\n  `EXECUTION` features provide metadata necessary for operation execution.\n  \"\"\"\n  EXECUTION\n}\n\ntype Mutation\n  @join__type(graph: REVIEWS)\n{\n  \"\"\"Adds a new review\"\"\"\n  addReview(\n    \"\"\"The review to be added.\"\"\"\n    input: ReviewInput!\n  ): Review!\n}\n\n\"\"\"Represents a product in the system\"\"\"\ntype Product\n  @join__type(graph: PRODUCTS, key: \"id\")\n  @join__type(graph: REVIEWS, key: \"id\")\n{\n  \"\"\"The unique ID of the product\"\"\"\n  id: ID!\n\n  \"\"\"The name of the product\"\"\"\n  name: String! @join__field(graph: PRODUCTS)\n\n  \"\"\"The description of the product\"\"\"\n  description: String! @join__field(graph: PRODUCTS)\n\n  \"\"\"The price of the product\"\"\"\n  price: Float! @join__field(graph: PRODUCTS)\n  reviews: [Review!]! @join__field(graph: REVIEWS)\n}\n\ntype Query\n  @join__type(graph: PRODUCTS)\n  @join__type(graph: REVIEWS)\n  @join__type(graph: USERS)\n{\n  \"\"\"Returns the list of products\"\"\"\n  products: [Product!]! @join__field(graph: PRODUCTS)\n\n  \"\"\"\n  Returns the product for the given id. If the product does not exist, returns null\n  \"\"\"\n  product(\n    \"\"\"ID of the product to be retrieved\"\"\"\n    id: ID!\n  ): Product @join__field(graph: PRODUCTS)\n\n  \"\"\"Returns a list of reviews\"\"\"\n  reviews: [Review!]! @join__field(graph: REVIEWS)\n\n  \"\"\"Returns the list of users\"\"\"\n  users: [User!]! @join__field(graph: USERS)\n}\n\ntype Review\n  @join__type(graph: REVIEWS)\n{\n  \"\"\"The ID of the review\"\"\"\n  id: ID!\n\n  \"\"\"The title of the review\"\"\"\n  title: String!\n\n  \"\"\"The review comment\"\"\"\n  comment: String!\n\n  \"\"\"The rating of the review 0 to 5\"\"\"\n  rating: Int!\n\n  \"\"\"The author of the review\"\"\"\n  author: User!\n\n  \"\"\"The product that the review is for\"\"\"\n  product: Product!\n}\n\n\"\"\"The input type for the addReview mutation\"\"\"\ninput ReviewInput\n  @join__type(graph: REVIEWS)\n{\n  \"\"\"The title of the review\"\"\"\n  title: String!\n\n  \"\"\"The comment of the review\"\"\"\n  comment: String!\n\n  \"\"\"The rating of the review. This is an integer between 0 and 5\"\"\"\n  rating: Int!\n\n  \"\"\"The ID of the review author\"\"\"\n  authorId: String!\n\n  \"\"\"The product ID that the review is for\"\"\"\n  productId: String!\n}\n\n\"\"\"Represents a user in the system\"\"\"\ntype User\n  @join__type(graph: REVIEWS, key: \"id\")\n  @join__type(graph: USERS, key: \"id\")\n{\n  \"\"\"The unique identifier for the user\"\"\"\n  id: ID!\n  reviews: [Review!]! @join__field(graph: REVIEWS)\n\n  \"\"\"The name of the user\"\"\"\n  name: String! @join__field(graph: USERS)\n\n  \"\"\"The email of the user\"\"\"\n  email: String @join__field(graph: USERS)\n}",
            "apiSchema": "type Mutation {\n  \"\"\"Adds a new review\"\"\"\n  addReview(\n    \"\"\"The review to be added.\"\"\"\n    input: ReviewInput!\n  ): Review!\n}\n\n\"\"\"Represents a product in the system\"\"\"\ntype Product {\n  \"\"\"The unique ID of the product\"\"\"\n  id: ID!\n\n  \"\"\"The name of the product\"\"\"\n  name: String!\n\n  \"\"\"The description of the product\"\"\"\n  description: String!\n\n  \"\"\"The price of the product\"\"\"\n  price: Float!\n  reviews: [Review!]!\n}\n\ntype Query {\n  \"\"\"Returns the list of products\"\"\"\n  products: [Product!]!\n\n  \"\"\"\n  Returns the product for the given id. If the product does not exist, returns null\n  \"\"\"\n  product(\n    \"\"\"ID of the product to be retrieved\"\"\"\n    id: ID!\n  ): Product\n\n  \"\"\"Returns a list of reviews\"\"\"\n  reviews: [Review!]!\n\n  \"\"\"Returns the list of users\"\"\"\n  users: [User!]!\n}\n\ntype Review {\n  \"\"\"The ID of the review\"\"\"\n  id: ID!\n\n  \"\"\"The title of the review\"\"\"\n  title: String!\n\n  \"\"\"The review comment\"\"\"\n  comment: String!\n\n  \"\"\"The rating of the review 0 to 5\"\"\"\n  rating: Int!\n\n  \"\"\"The author of the review\"\"\"\n  author: User!\n\n  \"\"\"The product that the review is for\"\"\"\n  product: Product!\n}\n\n\"\"\"The input type for the addReview mutation\"\"\"\ninput ReviewInput {\n  \"\"\"The title of the review\"\"\"\n  title: String!\n\n  \"\"\"The comment of the review\"\"\"\n  comment: String!\n\n  \"\"\"The rating of the review. This is an integer between 0 and 5\"\"\"\n  rating: Int!\n\n  \"\"\"The ID of the review author\"\"\"\n  authorId: String!\n\n  \"\"\"The product ID that the review is for\"\"\"\n  productId: String!\n}\n\n\"\"\"Represents a user in the system\"\"\"\ntype User {\n  \"\"\"The unique identifier for the user\"\"\"\n  id: ID!\n  reviews: [Review!]!\n\n  \"\"\"The name of the user\"\"\"\n  name: String!\n\n  \"\"\"The email of the user\"\"\"\n  email: String\n}",
            "version": "0.1.2",
            "hints": [
                "INCONSISTENT_DESCRIPTION: Product, Found 'Represents a product in the system' in products, Found '' in reviews.",
                "INCONSISTENT_DESCRIPTION: Product.id, Found 'The unique ID of the product' in products, Found '' in reviews.",
                "INCONSISTENT_DESCRIPTION: User, Found '' in reviews, Found 'Represents a user in the system' in users.",
                "INCONSISTENT_DESCRIPTION: User.id, Found '' in reviews, Found 'The unique identifier for the user' in users."
            ]
        }
    }
}